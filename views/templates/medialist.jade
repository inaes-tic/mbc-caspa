block content
- if (!name)
  - var name = i18n.gettext('Media List');
- if (!fixed)
  - var fixed = false

- var dbind = 'foreach: collection';
- var inndbind = '';

- var default_name = '';

- var readonly = false;
- var is_playlist = false;

case type
    when 'playlist-sortable'
        - dbind = 'sortable: { data: collection , allowDrop: allowDrop}';
        - inndbind = '';
        - default_name= "||'" + i18n.gettext('New Playlist') + "'";
        - fixed = false;
        - is_playlist = true;

    when 'playlist-draggable'
        - dbind = 'foreach: collection';
        - inndbind = 'drag: $data, dragOptions: { cursorAt: {top: 5, left: 5 } }';
        - fixed = true;

    when 'playlist-searchable'
        - dbind = 'foreach: collection';
        - fixed = true;

    when 'playlist-readonly'
        - dbind = 'foreach: collection';
        - readonly = true;
        - fixed = false;


.well#media-list
  - if (!fixed)
     button.close.kill-media-list(type='button', data-dismiss='alert') ×

  .editable-list-name(
        data-trigger= 'hover'
        data-placement= 'left'
        data-title= i18n.gettext ('Edit me !')
        data-content= i18n.gettext('Click here to edit Playlist Name.')
        style= 'border:none;'
    )

    .fixed
    - if (is_playlist && !readonly)
        h1.list-name(data-bind="text: name()" + default_name + ", visible: !editingName(), click: nameClick")
        input.input-block-level.input-list-name(data-bind="value: name, visible: editingName, hasfocus: editingName, valueUpdate: 'afterkeydown', addOnEnter: changeFocus", type='text')
    - else
        h1.list-name= name

  #media-search
  #playlist-table
    .total-time-div
        h1.label.label-inverse.format
            i.icon-time.icon-white
            span= ' '
            span.total-time.label.label-inverse.format(data-bind="text: total_time")

    .table-container(style='overflow-x:scroll;')
      table.table.table-bordered.table-striped.table-condensed#table
            thead
              tr
                th= i18n.gettext('Thumbnail')
                th= i18n.gettext('Media info')
                th= i18n.gettext('Status')
                th= i18n.gettext('Availability')

            tbody.tbody#media-view(data-bind=dbind,class='tbody')
              tr(data-bind=inndbind)
                td
                  - if (!is_playlist)
                    - var target = "attr:{href: '#media/'+_id().split('-')[0]}";
                  a.plain(data-bind=target )
                    img(width="150",height="100",data-bind="attr:{ src: checksum() ?  'sc/'+checksum().split('-')[0]+'.jpg' : '/pics/generic.jpg' }")
                td
                    - if (is_playlist && !readonly)
                      button.close.remove-media(type='button', data-bind='click: $root.removeItem, clickBubble: false') ×
                    h5(data-bind="text: name")
                    h5(data-bind="text: stat().name ? stat().name : file")
                    span.label.label-warning.format
                        i.icon-time.icon-white
                        span(data-bind="text: durationraw")
                    span='  '

                    <!-- ko if: video().container -->
                    span.label.format
                        i.icon-file.icon-white
                        span(data-bind="text: ' '+video().container ")
                    span=' '
                    <!-- /ko -->

                    span.label.video
                        i.icon-film.icon-white
                        span(data-bind=" text: ' '+video().codec")
                    span=' '
                    span.label.audio
                        i.icon-volume-up.icon-white
                        span(data-bind=" text: ' '+audio().codec")
                        span=' '
                td
                  a.plain(data-bind= "attr:{href: '#media/'+_id().split('-')[0]}")
                    span.label.label-success= i18n.gettext('Success')
                td
                  a.plain(data-bind= "attr:{href: '#media/'+_id().split('-')[0]}")
                    span.label.label-important= i18n.gettext('Error')
